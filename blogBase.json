{"singlePage": [], "startSite": "12/11/2023", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark_colorblind", "urlMode": "pinyin", "script": "", "style": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "title": "Eureka!!", "displayTitle": "Zhaoda", "subTitle": "\u4eba\u7c7b\u7684\u60b2\u6b22\u5e76\u4e0d\u76f8\u901a\uff0c\u6211\u53ea\u89c9\u5f97\u4ed6\u4eec\u5435\u95f9\u3002", "homeUrl": "https://pyae123zd.github.io", "avatarUrl": "https://raw.githubusercontent.com/pyae123zd/PicoRepo/main/img/Pasted%20Image%2020230803150435.png", "faviconUrl": "http://meekdai.com/favicon.ico", "GMEEK_VERSION": "last", "email": "pyae123@hotmail.com", "postListJson": {"P1": {"htmlDir": "docs/post/sao-qi-bian-cheng-ji-qiao.html", "labels": ["\u5b66\u4e60"], "postTitle": "\u9a9a\u6c14\u7f16\u7a0b\u6280\u5de7", "postUrl": "post/sao-qi-bian-cheng-ji-qiao.html", "postSourceUrl": "https://github.com/pyae123zd/pyae123zd.github.io/issues/1", "commentNum": 1, "wordCount": 746, "description": "\r\n## \u5de5\u5177\u7c7b\r\n\r\n- hutool\r\n- apache-commons\r\n- google-guava\r\n\r\n## \u51fd\u6570\u5f0f\u7f16\u7a0b\r\n- [Vavr](https://docs.vavr.io/)\r\n\t- ![Pasted image 20230809191221](https://raw.githubusercontent.com/pyae123zd/PicoRepo/main/img/Pasted%20image%2020230809191221.png)\r\n\t- ![Pasted image 20230809183348](https://raw.githubusercontent.com/pyae123zd/PicoRepo/main/img/Pasted%20image%2020230809183348.png)\r\n## \u589e\u5f3a\u6d41\u5904\u7406\r\n- [StreamEx](https://www.baeldung.com/streamex)\r\n\r\n## \u9632\u5fa1\u5f0f\u7f16\u7a0b\r\n- Optional\r\n- Assert\r\n## \u8bbe\u8ba1\u6a21\u5f0f\u5c01\u88c5\r\n- Builder\r\n- Step Builder\r\n- \u6a21\u7248\uff08\u63a5\u53e3\uff0c\u62bd\u8c61\u7c7b\uff09\r\n- Pipeline\r\n- \u95e8\u9762\uff08facade\uff09\r\n## \u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\r\n- mapstruct\r\n- querydsl\r\n- lombok\r\n- Converter\uff08\u8f6c\u6362\u5668\uff09\r\n## \u5b57\u8282\u7801\u589e\u5f3a\r\n- [Byte Buddy - runtime code generation for the Java virtual machine](https://bytebuddy.net/#/tutorial)\r\n## \u4e8b\u4ef6\u9a71\u52a8\r\n- event listener\r\n\u3002", "top": 0, "createdAt": 1702262104, "style": "", "script": "", "createdDate": "2023-12-11", "dateLabelColor": "#A333D0"}, "P2": {"htmlDir": "docs/post/lu-xun-de-ming-yan-ming-ju.html", "labels": ["\u4eba\u751f"], "postTitle": "\u9c81\u8fc5\u7684\u540d\u8a00\u540d\u53e5", "postUrl": "post/lu-xun-de-ming-yan-ming-ju.html", "postSourceUrl": "https://github.com/pyae123zd/pyae123zd.github.io/issues/2", "commentNum": 0, "wordCount": 16941, "description": "\r\n# \u9c81\u8fc5\r\n[![](https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/%E9%B2%81%E8%BF%85lx.jpg/220px-%E9%B2%81%E8%BF%85lx.jpg)](https://zh.wikiquote.org/wiki/File:%E9%B2%81%E8%BF%85lx.jpg)\r\n\r\n\u6211\u60f3\uff1a\u5e0c\u671b\u672c\u662f\u65e0\u6240\u8c13\u6709\uff0c\u65e0\u6240\u8c13\u65e0\u7684\u3002", "top": 0, "createdAt": 1702263239, "style": "", "script": "", "createdDate": "2023-12-11", "dateLabelColor": "#A333D0"}, "P3": {"htmlDir": "docs/post/Guns3-kai-fa-gui-fan.html", "labels": ["\u5f00\u53d1"], "postTitle": "Guns3\u5f00\u53d1\u89c4\u8303", "postUrl": "post/Guns3-kai-fa-gui-fan.html", "postSourceUrl": "https://github.com/pyae123zd/pyae123zd.github.io/issues/3", "commentNum": 0, "wordCount": 3505, "description": "2024-01-03\r\n\r\n### 1. \u5f3a\u4f9d\u8d56\u5173\u7cfb\r\n\r\n\u9879\u76ee\u57fa\u4e8espring boot\u67b6\u6784\uff0c\u6240\u4ee5\u5bf9spring boot\u5f3a\u4f9d\u8d56\uff0c\u53e6\u5916\u5bf9hutool\u5de5\u5177\u7c7b\uff0clombok\uff0cfastjson\u5f3a\u4f9d\u8d56\uff0c\u5176\u4ed6\u6846\u67b6\u4e0d\u5f3a\u4f9d\u8d56\r\n\r\n### 2. \u4efb\u4f55\u7c7b\u5747\u53ef\u62d3\u5c55\r\n\r\n\u5229\u7528@Primary\u6ce8\u89e3\u6765\u66ff\u6362\u5df2\u7ecf\u88c5\u8f7d\u7684spring\u5bb9\u5668\u4e2d\u7684bean\r\n\r\n### 3.\u6bcf\u4e2a\u6a21\u5757\u8981\u6709\u4e00\u4e2a\u5e38\u91cf\u7c7b\r\n\r\n\u5e38\u91cf\u7c7b\u7528\u6765\u5b58\u653e\u6a21\u5757\u540d\u79f0\u548c\u5f02\u5e38\u679a\u4e3e\u7684\u6b65\u8fdb\u503c\uff0c\u5982\u679c\u672c\u6a21\u5757\u5f02\u5e38\u8f83\u591a\uff0c\u53ef\u4ee5\u5b58\u653e\u591a\u4e2a\u6b65\u8fdb\u503c\r\n\r\n```java\r\npublic interface RuleConstants {\r\n\r\n    /**\r\n     * \u89c4\u5219\u6a21\u5757\u7684\u540d\u79f0\r\n     */\r\n    String RULE_MODULE_NAME = \"kernel-a-rule\";\r\n\r\n    /**\r\n     * \u5f02\u5e38\u679a\u4e3e\u7684\u6b65\u8fdb\u503c\r\n     */\r\n    String RULE_EXCEPTION_STEP_CODE = \"00\";\r\n\r\n}\r\n```\r\n\r\n### 4. \u6bcf\u4e2a\u6a21\u5757\u8981\u6709\u4e00\u4e2a\u5f02\u5e38\u7c7b\r\n\r\n\u5f02\u5e38\u7c7b\u8981\u7ee7\u627fServiceException\r\n\r\n```java\r\npublic class DaoException extends ServiceException {\r\n\r\n    public DaoException(AbstractExceptionEnum exception) {\r\n        super(DbConstants.DB_MODULE_NAME, exception);\r\n    }\r\n\r\n}\r\n```\r\n\r\n### 5. expander\u5305\u662f\u5bf9\u914d\u7f6e\u8868\u7684\u62d3\u5c55\r\n\r\nkernel-d-config\u6a21\u5757\u53ea\u8d1f\u8d23\u5bf9\u7cfb\u7edf\u914d\u7f6e\u7684\u521d\u59cb\u5316\uff0c\u65b0\u589e\uff0c\u5220\u9664\u7b49\u64cd\u4f5c\uff0c\u4e0d\u8fdb\u884c\u5bf9\u67d0\u4e2a\u5177\u4f53\u914d\u7f6e\u7684\u7ef4\u62a4\uff0c\u5404\u4e2a\u6a21\u5757\u9700\u8981\u914d\u7f6e\u62d3\u5c55\u5c5e\u6027\u65f6\uff0c\u5728\u5404\u4e2a\u6a21\u5757\u7684api\u6a21\u5757\u5efa\u7acbexpander\u5305\u7ef4\u62a4\r\n\r\n### 6. Bean\u7684\u88c5\u914d\uff0c\u5c3d\u91cf\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u8981\u5728\u7c7b\u7684\u5185\u90e8\u7528@Resource\u6216\u8005@Autowired\r\n\r\n\u6784\u9020\u51fd\u6570\u88c5\u914d\u66f4\u7075\u6d3b\uff0c\u5982\u679c\u76f4\u63a5\u7528@Resource\u5219\u4f1a\u4ea4\u7ed9spring\u53bb\u88c5\u914d\uff0cspring\u4f1a\u53bb\u627e\u5230\u5bb9\u5668\u4e2d\u7684\u76f8\u5173bean\uff0c\u4e0d\u5982\u624b\u52a8\u7684\u7075\u6d3b\r\n\r\n\u591a\u51fa\u73b0\u5728\u88c5\u914d\u7684\u662f\u63a5\u53e3\u7684\u60c5\u51b5\uff0c\u5982\u679c\u63a5\u53e3\u6709\u591a\u4e2a\u5b9e\u73b0\uff0c\u5f88\u660e\u663e\u7528\u6784\u9020\u51fd\u6570\u53bb\u88c5\u914d\u66f4\u5408\u9002\r\n\r\n### 7. pojo\u7684\u5206\u5305\u7ed3\u6784\r\n\r\npojo\u4e0b\u53ef\u4ee5\u5206\u4e3arequest\uff08\u63a7\u5236\u5668\u5c42\u8bf7\u6c42\u53c2\u6570\u7684\u5c01\u88c5\uff09\uff0cresponse\uff08\u63a7\u5236\u5668\u5c42\u54cd\u5e94\u53c2\u6570\u7684\u5c01\u88c5\uff09\uff0cparam\uff08\u5176\u4ed6\u7c7b\u4e0b\u53c2\u6570\u7684\u5c01\u88c5\uff09\r\n\r\n\u5176\u4e2drequest\u5305\u4e0b\u7684\u7c7b\u4ee5Request\u7ed3\u5c3e\uff0cresponse\u5305\u4e0b\u7684\u7c7b\u4ee5Response\u7ed3\u5c3e\uff0cparam\u5305\u4e0b\u7684\u7c7b\u4ee5Param\u7ed3\u5c3e\r\n\r\nrequest\u5305\u4e0b\u7684\u7c7b\u4e00\u822c\u4f1a\u52a0\u4e0a\u53c2\u6570\u6821\u9a8c\u6ce8\u89e3\uff0c\u53c2\u6570\u6821\u9a8c\u7528\u7684hibernate validator\u6ce8\u89e3\r\n\r\n\u4e00\u822c\u60c5\u51b5\uff0c\u76f4\u63a5\u7528\u5b9e\u4f53\u8fd4\u56de\uff0c\u51cf\u5c11\u4e00\u4e9bpojo\u7684\u4e66\u5199\uff0c\u590d\u6742\u7684\u8fd4\u56de\u5bf9\u8c61\u8fd8\u662f\u8981\u5355\u72ec\u5c01\u88c5pojo\r\n\r\n### 8. pom\u4e2d\u7684\u6ce8\u91ca\u8981\u5199\u6e05\u695a\uff0c\u4e3a\u4ec0\u4e48\u5f15\u7528\u8fd9\u4e2a\u6a21\u5757\u5199\u5230\u6bcf\u4e2a\u4f9d\u8d56\u4e0a\u8fb9\r\n\r\n\u4f8b\u5982\uff0c\u5982\u4e0b\u5199\u6cd5\uff1a\r\n\r\n```xml\r\n<!--jwt\u6a21\u5757-->\r\n<!--\u7528\u6765\u7ed9\u751f\u6210\u5e26\u9274\u6743\u7684url\u7528-->\r\n<dependency>\r\n    <groupId>com.sedinbj.kernel</groupId>\r\n    <artifactId>jwt-sdk</artifactId>\r\n    <version>1.0.0</version>\r\n</dependency>\r\n```\r\n\r\n### 9. @ApiResource \u4e0a\u7684 path url \u5199\u5b8c\u6574\u7684\u8bf7\u6c42url \u4e0d\u8981\u5199\u5230\u7c7b\u4e0aurl\r\n\r\n\u4ee5\u4e0b\u662f\u9519\u8bef\u793a\u4f8b\r\n\r\n```java\r\n@RestController\r\n@ApiResource(name = \"\u914d\u7f6e\u7ba1\u7406\", path = \"/system/config/\")\r\npublic class SysConfigController {\r\n\r\n    @GetResource(name = \"\u83b7\u53d6\u914d\u7f6e\u5217\u8868\", path = \"/list\")\r\n    public ResponseData pageList() {\r\n        return new SuccessResponseData();\r\n    }\r\n    \r\n}\r\n```\r\n\r\n### 10. private\u65b9\u6cd5\u8981\u653e\u5230\u65b9\u6cd5\u6700\u4e0b\u8fb9\r\n\r\n\u5728\u7c7b\u4e2d private \u65b9\u6cd5\u653e\u5230\u6700\u4e0b\u8fb9\r\n\r\n```java\r\npublic class ConfigServiceImpl implements ConfigService {\r\n\r\n    public List<Long> getList() {\r\n        return null;\r\n    }\r\n\r\n    public Object getDeatil() {\r\n        return null;\r\n    }\r\n\r\n    private Object getOne() {\r\n        return null;\r\n    }\r\n\r\n}\r\n```\r\n\r\n### 11. Controller \u4e2d post get \u89c4\u8303\r\n\r\n\u5728 Controller \u7c7b\u4e2d\u6240\u6709\u4e0d\u6d89\u53ca\u5230\u6570\u636e\u53d8\u52a8\u7684\u63a5\u53e3\uff0c\u4f8b\u5982\u5206\u9875\u67e5\u8be2\u3001\u6839\u636e\u4e3b\u952e\u83b7\u53d6\u8be6\u60c5\u7b49\u67e5\u8be2\u63a5\u53e3\u4f7f\u7528 @GetResource \u6ce8\u89e3\uff0c\u5176\u4f59\u6dfb\u52a0\u3001\u4fee\u6539\u3001\u5220\u9664\u63a5\u53e3\u7edf\u4e00\u4f7f\u7528 @PostResource \u6ce8\u89e3 \u4f8b\u5982\r\n\r\n```java\r\n\r\n@RestController\r\n@ApiResource(name = \"\u914d\u7f6e\u7ba1\u7406\", path = \"/system/config/\")\r\npublic class SysConfigController {\r\n\r\n    @GetResource(name = \"\u83b7\u53d6\u914d\u7f6e\u5217\u8868\", path = \"/list\")\r\n    public ResponseData pageList() {\r\n        return new SuccessResponseData();\r\n    }\r\n\r\n    @PostResource(name = \"\u6dfb\u52a0\u914d\u7f6e\", path = \"/add\")\r\n    public ResponseData add() {\r\n        return new SuccessResponseData();\r\n    }\r\n\r\n    @PostResource(name = \"\u4fee\u6539\u914d\u7f6e\", path = \"/update\")\r\n    public ResponseData update() {\r\n        return new SuccessResponseData();\r\n    }\r\n\r\n    @PostResource(name = \"\u5220\u9664\u914d\u7f6e\", path = \"/delete\")\r\n    public ResponseData delete() {\r\n        return new SuccessResponseData();\r\n    }\r\n\r\n}\r\n```\r\n\r\n### 12. api\uff0c\u679a\u4e3e\uff0c\u5f02\u5e38\u7b49\u7c7b\u521b\u5efa\u540e\u5c31\u5c3d\u5feb\u63d0\u4ea4\r\n\r\n\u521b\u5efa\u597d\u540e\u76f4\u63a5\u63d0\u4ea4\uff0c\u4e3a\u4e86\u65b9\u4fbf\u522b\u4eba\u7528\uff0c\u4e0d\u7528\u522b\u4eba\u518d\u521b\u5efa\uff0c\u9632\u6b62\u91cd\u590d\uff0c\u5728\u521b\u5efa\u4e4b\u524d\uff0c\u5148\u62c9\u53d6\u4e00\u4e0b\u4ee3\u7801\u770b\u770b\u522b\u4eba\u662f\u5426\u521b\u5efa\u4e86\r\n\r\n### 13. \u8bf7\u6c42\u53c2\u6570\u8981\u52a0@ChineseDescription\u6ce8\u89e3\r\n\r\n\r\n### 14. \u8bf7\u6c42\u53c2\u6570\u7c7b\u8981\u7ee7\u627fBaseRequest\uff0c\u5b9e\u4f53\u7c7b\u7ee7\u627fBaseEntity\uff0cController\u65b9\u6cd5\u54cd\u5e94\u7ed3\u679c\u7edf\u4e00\u4f7f\u7528SuccessResponseData\u5c01\u88c5\uff0c\u82e5\u6709\u9519\u8bef\u9700\u629b\u51fa\u6709\u5b9e\u9645\u9519\u8bef\u4fe1\u606f\u7684\u5f02\u5e38\r\n\r\n\r\n### 15. service\u5c42\u65b9\u6cd5\u7684\u987a\u5e8f\uff0c\u5148\u5199\u589e\u6539\u5220\u64cd\u4f5c\uff0c\u6700\u540e\u5199\u67e5\u8be2\u64cd\u4f5c\r\n\r\nservice\u63a5\u53e3\u548cservice\u5b9e\u73b0\u7684\u987a\u5e8f\u8981\u4e00\u81f4\r\n\r\n```java\r\n@GetResource(name = \"\u67e5\u770b\u8be6\u60c5\", path = \"/company/detail\", responseClass = CompanyResponse.class)\r\n```\r\n\r\n### 16. \u4e3a\u4e86\u65b9\u4fbf\u52a0\u4e1a\u52a1\u7f13\u5b58\uff0c\u6240\u6709\u7684dao\u64cd\u4f5c\u4e0d\u8981\u76f4\u63a5\u7528xxxMapper\r\n\r\n\u7edf\u4e00\u653e\u5728service\u64cd\u4f5cdao\uff0c\u522b\u7684\u5c42\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528xxxMapper\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3002", "top": 0, "createdAt": 1704273072, "style": "", "script": "", "createdDate": "2024-01-03", "dateLabelColor": "#bc4c00"}, "P4": {"htmlDir": "docs/post/AI-dai-ma-gong-ju.html", "labels": ["AI"], "postTitle": "AI\u4ee3\u7801\u5de5\u5177", "postUrl": "post/AI-dai-ma-gong-ju.html", "postSourceUrl": "https://github.com/pyae123zd/pyae123zd.github.io/issues/4", "commentNum": 0, "wordCount": 9598, "description": "---\r\ndate created: 2024-01-11\r\n\r\n---\r\n\r\n### \u53ef\u9009\u5de5\u5177\r\n\r\n- [[Copilot](https://github.com/features/copilot)](https://github.com/features/copilot) \r\n  - $10 per month,$100 per year\r\n- [[Codeium](https://codeium.com/)](https://codeium.com/)\r\n  - free\r\n- CodeGeeX(\u6e05\u534e)\r\n  - free\r\n  - \u76f4\u8fde\r\n  - \u53ef\u81ea\u5b9a\u4e49\u8bad\u7ec3\r\n- \u901a\u4e49\u7075\u7801(\u963f\u91cc)\r\n  - free\r\n  - \u76f4\u8fde\r\n- Tabline\r\n- Replit\r\n- ...\r\n\r\n---\r\n\r\n### \u529f\u80fd\r\n\r\n- \u751f\u6210\u4ee3\u7801\r\n- \u89e3\u91ca\u4ee3\u7801\r\n- \u4f18\u5316\u4ee3\u7801\r\n- \u751f\u6210\u6d4b\u8bd5\u65b9\u6cd5\r\n- \u751f\u6210\u6ce8\u91ca\r\n- \u4fee\u590d\u95ee\u9898\u4ee3\u7801\r\n\r\n### \u4ee3\u7801\u751f\u6210\u5de5\u5177\u4f7f\u7528\r\n\r\n- \u7b80\u5355\u573a\u666f\uff1a\r\n  - \u8054\u7cfb\u4e0a\u4e0b\u6587\u76f4\u63a5\u8865\u5168\r\n- \u6709\u56fa\u5b9a\u5b9e\u73b0\u7684\u529f\u80fd\uff1a\r\n  - \u6ce8\u91ca\u63cf\u8ff0\uff08\u6700\u597d\u662f\u82f1\u6587\uff09\r\n  - \u76f4\u63a5\u4f7f\u7528\u65b9\u6cd5\u540d\u6765\u63d0\u793a\r\n- \u590d\u6742\u573a\u666f\r\n  - \u6ce8\u91ca\u63cf\u8ff0\r\n  - \u62c6\u5206\u4efb\u52a1\r\n\r\n## \u6548\u679c\u5bf9\u6bd4\r\n\r\n### \u6848\u4f8b\u4e00\uff1a\u4f7f\u7528Java \u5199\u4e00\u4e2a\u5de5\u5177\u7c7b \u6839\u636e\u67d0\u4e2a\u5b9e\u4f53\u7c7b\u7684\u5b57\u6bb5\u540d \u5b9e\u73b0word\u4e2d\u6a21\u7248\u5185\u5bb9\u7684\u586b\u5145\r\n\r\n- Github Copilot\r\n\r\n```java\r\nimport org.apache.poi.xwpf.usermodel.*;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.lang.reflect.Field;\r\n\r\npublic class WordFiller {\r\n    public static void fillTemplate(Object entity, String templatePath, String outputPath) throws Exception {\r\n        XWPFDocument doc = new XWPFDocument(new FileInputStream(new File(templatePath)));\r\n        for (Field field : entity.getClass().getDeclaredFields()) {\r\n            field.setAccessible(true);\r\n            String name = field.getName();\r\n            Object value = field.get(entity);\r\n            for (XWPFParagraph p : doc.getParagraphs()) {\r\n                for (XWPFRun r : p.getRuns()) {\r\n                    String text = r.getText(0);\r\n                    if (text != null && text.contains(\"{\" + name + \"}\")) {\r\n                        text = text.replace(\"{\" + name + \"}\", value.toString());\r\n                        r.setText(text, 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        FileOutputStream out = new FileOutputStream(outputPath);\r\n        doc.write(out);\r\n        out.close();\r\n    }\r\n}\r\n```\r\n\r\n- Codeium\r\n\r\n```java\r\nimport java.util.Map;\r\n\r\npublic class WordTemplateUtil {\r\n    public static String fillTemplate(String template, Map<String, String> fieldMap) {\r\n        for (Map.Entry<String, String> entry : fieldMap.entrySet()) {\r\n            String fieldName = entry.getKey();\r\n            String value = entry.getValue();\r\n            template = template.replace(\"{{\" + fieldName + \"}}\", value);\r\n        }\r\n        return template;\r\n    }\r\n}\r\n```\r\n\r\n\u63d0\u793a\u8f93\u5165\u4e3a\u5b9e\u4f53\u7c7b\u540e\r\n\r\n```java\r\nimport java.lang.reflect.Field;\r\nimport java.util.Map;\r\n\r\npublic class WordTemplateUtil {\r\n    public static String fillTemplateFromEntity(String template, YourEntityClass entity) throws IllegalAccessException {\r\n        Class<?> entityClass = entity.getClass();\r\n        Field[] fields = entityClass.getDeclaredFields();\r\n        for (Field field : fields) {\r\n            field.setAccessible(true);\r\n            String fieldName = field.getName();\r\n            String value = field.get(entity).toString();\r\n            template = template.replace(\"{{\" + fieldName + \"}}\", value);\r\n        }\r\n        return template;\r\n    }\r\n}\r\n```\r\n\r\n- \u901a\u4e49\u7075\u7801\r\n\r\n```java\r\nimport org.apache.poi.xwpf.usermodel.*;\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.lang.reflect.Field;\r\nimport java.util.List;\r\n\r\npublic class WordTemplateFiller {\r\n\r\n    public static void fillTemplate(MyEntity entity, String templatePath, String outputPath) throws Exception {\r\n        // \u8bfb\u53d6Word\u6a21\u677f\u6587\u4ef6\r\n        FileInputStream fis = new FileInputStream(templatePath);\r\n        XWPFDocument document = new XWPFDocument(fis);\r\n\r\n        // \u904d\u5386\u5b9e\u4f53\u7c7b\u7684\u6240\u6709\u5b57\u6bb5\r\n        Field[] fields = MyEntity.class.getDeclaredFields();\r\n        for (Field field : fields) {\r\n            // \u8bbe\u7f6e\u8bbf\u95ee\u6743\u9650\u4e3a\u53ef\u8bbf\u95ee\r\n            field.setAccessible(true);\r\n\r\n            // \u83b7\u53d6\u5b57\u6bb5\u540d\r\n            String fieldName = field.getName();\r\n\r\n            // \u5728Word\u6587\u6863\u4e2d\u67e5\u627e\u4e0e\u5b57\u6bb5\u540d\u5339\u914d\u7684\u5360\u4f4d\u7b26\uff08\u4f8b\u5982 {{fieldName}}\uff09\r\n            List<XWPFParagraph> paragraphs = document.getParagraphs();\r\n            for (XWPFParagraph paragraph : paragraphs) {\r\n                List<XWPFRun> runs = paragraph.getRuns();\r\n                for (XWPFRun run : runs) {\r\n                    String text = run.getText(0);\r\n                    if (text != null && text.contains(\"{{\" + fieldName + \"}}\")) {\r\n                        // \u66ff\u6362\u5360\u4f4d\u7b26\u4e3a\u5b57\u6bb5\u7684\u5b9e\u9645\u503c\r\n                        Object fieldValue = field.get(entity);\r\n                        String newValue = fieldValue != null ? fieldValue.toString() : \"\";\r\n                        run.setText(newValue, 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // \u5199\u5165\u586b\u5145\u540e\u7684\u5185\u5bb9\u5230\u65b0\u7684Word\u6587\u4ef6\r\n        FileOutputStream out = new FileOutputStream(outputPath);\r\n        document.write(out);\r\n        out.close();\r\n        document.close();\r\n        fis.close();\r\n    }\r\n}\r\n\r\n// \u5047\u8bbe\u7684\u5b9e\u4f53\u7c7b\r\nclass MyEntity {\r\n    private String name;\r\n    private String address;\r\n    // \u5176\u4ed6\u5b57\u6bb5\u53ca\u5bf9\u5e94\u7684getter/setter...\r\n}\r\n\r\n```\r\n\r\n- CodeGeeX\r\n\r\n```python\r\nfrom docx import Document\r\n\r\nclass EntityClass:\r\n    def __init__(self, field1, field2, field3):\r\n        self.field1 = field1\r\n        self.field2 = field2\r\n        self.field3 = field3\r\n\r\ndef fill_template(entity, template_path):\r\n    # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684Word\u6587\u6863\r\n    doc = Document()\r\n\r\n    # \u6253\u5f00\u6a21\u677f\u6587\u4ef6\r\n    with open(template_path, 'rb') as file:\r\n        # \u5c06\u6a21\u677f\u5185\u5bb9\u6dfb\u52a0\u5230\u65b0\u7684Word\u6587\u6863\u4e2d\r\n        doc.add_paragraph(file.read().decode('utf-8'))\r\n\r\n    # \u6839\u636e\u5b9e\u4f53\u7c7b\u7684\u5b57\u6bb5\u540d\u8fdb\u884c\u6a21\u677f\u5185\u5bb9\u7684\u586b\u5145\r\n    for paragraph in doc.paragraphs:\r\n        for run in paragraph.runs:\r\n            for key, value in entity.__dict__.items():\r\n                text = f'{{{key}}}'\r\n                if text in run.text:\r\n                    run.text = run.text.replace(text, str(value))\r\n\r\n    return doc\r\n\r\n# \u793a\u4f8b\r\nentity = EntityClass('John Doe', 'Software Engineer', 30)\r\ntemplate_path = 'template.docx'\r\ndoc = fill_template(entity, template_path)\r\ndoc.save('output.docx')\r\n\r\n```\r\n\r\n\u751f\u6210\u4e86python\u4ee3\u7801\r\n\r\n- ChatGpt\r\n\r\n```java\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.util.Map;\r\n\r\nimport org.apache.poi.xwpf.usermodel.XWPFDocument;\r\nimport org.apache.poi.xwpf.usermodel.XWPFPicture;\r\nimport org.apache.poi.xwpf.usermodel.XWPFRun;\r\nimport org.apache.poi.xwpf.usermodel.XWPFSimpleShape;\r\nimport org.apache.poi.xwpf.usermodel.XWPFTable;\r\nimport org.apache.poi.xwpf.usermodel.XWPFTableRow;\r\n\r\npublic class WordTemplateFiller {\r\n\r\n    public static void fillTemplate(String templatePath, String outputPath, Map<String, String> fieldValues) {\r\n        try (FileInputStream fis = new FileInputStream(templatePath);\r\n             XWPFDocument document = new XWPFDocument(fis)) {\r\n\r\n            // \u66ff\u6362\u6587\u672c\u5185\u5bb9\r\n            for (XWPFParagraph paragraph : document.getParagraphs()) {\r\n                for (XWPFRun run : paragraph.getRuns()) {\r\n                    String text = run.getText(0);\r\n                    if (text != null) {\r\n                        for (Map.Entry<String, String> entry : fieldValues.entrySet()) {\r\n                            text = text.replace(\"${\" + entry.getKey() + \"}\", entry.getValue());\r\n                        }\r\n                        run.setText(text, 0);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // \u66ff\u6362\u8868\u683c\u5185\u5bb9\r\n            for (XWPFTable table : document.getTables()) {\r\n                for (XWPFTableRow row : table.getRows()) {\r\n                    for (XWPFRun run : row.getTableCells().get(0).getParagraphs().get(0).getRuns()) {\r\n                        String text = run.getText(0);\r\n                        if (text != null) {\r\n                            for (Map.Entry<String, String> entry : fieldValues.entrySet()) {\r\n                                text = text.replace(\"${\" + entry.getKey() + \"}\", entry.getValue());\r\n                            }\r\n                            run.setText(text, 0);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            try (FileOutputStream fos = new FileOutputStream(outputPath)) {\r\n                document.write(fos);\r\n            }\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        // \u793a\u4f8b\u7528\u6cd5\r\n        String templatePath = \"path/to/your/template.docx\";\r\n        String outputPath = \"path/to/your/output.docx\";\r\n\r\n        // \u5b57\u6bb5\u540d\u548c\u5bf9\u5e94\u7684\u503c\r\n        Map<String, String> fieldValues = Map.of(\r\n                \"FieldName1\", \"Value1\",\r\n                \"FieldName2\", \"Value2\",\r\n                // \u6dfb\u52a0\u66f4\u591a\u5b57\u6bb5\r\n        );\r\n\r\n        fillTemplate(templatePath, outputPath, fieldValues);\r\n    }\r\n}\r\n\r\n```\r\n\r\n### \u6848\u4f8b\u4e8c\uff1a\u4f7f\u7528Java\u5199\u4e2a\u4eceprometheus\u4e2d\u83b7\u53d6\u5f53\u524dCPU\u5360\u7528\u7387TOP5\u7684\u4e3b\u673a\u7684\u65b9\u6cd5\r\n\r\n- Github Copilot\r\n  ![Pasted image 20240124103118](https://raw.githubusercontent.com/pyae123zd/PicoRepo/main/img/Pasted%20image%2020240124103118.png)\r\n\r\n> `100 - (avg by (instance) (irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)`\uff1a\u8fd9\u4e2a\u67e5\u8be2\u5173\u6ce8\u7684\u662f\u6bcf\u4e2a\u5b9e\u4f8b\u7684CPU\u4f7f\u7528\u7387\u3002", "top": 0, "createdAt": 1706065328, "style": "", "script": "", "createdDate": "2024-01-24", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"AI": "#8DCA2F", "bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "question": "#d876e3", "wontfix": "#ffffff", "\u4eba\u751f": "#2E5FCE", "\u5b66\u4e60": "#860C15", "\u5f00\u53d1": "#46E773"}, "prevUrl": "disabled", "nextUrl": "disabled"}